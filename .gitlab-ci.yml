image: centos:latest

variables:
  NODE_ENV: "test"

stages:
  - lambda_build
  - terraform_plan
  - terraform_apply
  - terraform_destroy

before_script:
# Docker on centos:7
#  - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#  - yum install docker-ce -y
#  - docker ps -a
#  - df -h
#  - pwd

# Install Terraform
   - yum -y install unzip
   - curl https://releases.hashicorp.com/terraform/0.11.2/terraform_0.11.2_linux_amd64.zip -o terraform.zip;
   - yes | unzip terraform.zip
   - ls -lisa
   - chmod +x terraform; mv terraform /usr/local/bin/.

# Install Python 3.4 on centos7
   - yum -y install epel-release zip
   - yum -y install python34 python34-setuptools
   - easy_install-3.4 pip

# Add secret vars
   - echo ${REDDIT_CLIENT_ID} >> terraform/terraform.tfvars
   - echo ${REDDIT_CLIENT_SECRET} >> terraform/terraform.tfvars
   - echo ${REDDIT_CLIENT_USERNAME} >> terraform/terraform.tfvars
   - echo ${REDDIT_CLIENT_PASSWORD} >> terraform/terraform.tfvars

.lambda_build: &lambda_build
  stage: lambda_build
  script:
    - cd lambda
    - ./build.sh

.terraform_plan: &terraform_plan
  stage: terraform_plan
  script:
    - cd terraform
    - terraform init
    - terraform plan

#  artifacts:
#    expire_in: 24h
#    when: always
#    paths:
#      - final/

lambda_build:
  <<: *lambda_build

terraform_plan:
  <<: *terraform_plan
