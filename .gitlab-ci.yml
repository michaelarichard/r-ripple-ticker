#image: centos:latest
image: michaelrichard/builder:v0.2

variables:
  NODE_ENV: "test"
  GIT_SSL_NO_VERIFY: "true"

stages:
  - build
  - terraform_plan
  - terraform_apply
  - terraform_destroy
before_script:
   - echo -e "[default]\naws_access_key_id = ${AWS_ID}\naws_secret_access_key = ${AWS_KEY}" > ~/.aws/credentials

.build: &build
  stage: build
  script:
   - cd lambda
   - ./build.sh
   - cd ..

.terraform_plan: &terraform_plan
  stage: terraform_plan
  script:
    - cd terraform
    - echo "REDDIT_CLIENT_ID = \"${REDDIT_CLIENT_ID}\"" >> ./terraform/terraform.tfvars
    - echo "REDDIT_CLIENT_SECRET = \"${REDDIT_CLIENT_SECRET}\"" >> ./terraform/terraform.tfvars
    - echo "REDDIT_CLIENT_USERNAME = \"${REDDIT_CLIENT_USERNAME}\"" >> ./terraform/terraform.tfvars
    - echo "REDDIT_CLIENT_PASSWORD = \"${REDDIT_CLIENT_PASSWORD}\"" >> ./terraform/terraform.tfvars
    - echo "REDDIT_SUBREDDIT = \"${REDDIT_SUBREDDIT}\""  >> terraform.tfvars
    - terraform init
    - terraform plan -out tfplan
  artifacts:
    expire_in: 24h
    when: always
    paths:
      - lambda/lambda.py.zip
      - terraform/tfplan
      - terraform/terraform.tfvars

.terraform_apply: &terraform_apply
  stage: terraform_apply
  script:
    - cd terraform
    - terraform init
    - terraform apply -auto-approve tfplan

rippletest_build:
  variables:
    REDDIT_SUBREDDIT: "rippletest"
  <<: *build

rippletest_terraform_plan:
  dependencies:
    - rippletest_build
  variables:
    REDDIT_SUBREDDIT: "rippletest"
  <<: *terraform_plan

rippletest_terraform_apply:
  dependencies:
    - rippletest_build
    - rippletest_terraform_plan
  variables:
    REDDIT_SUBREDDIT: "rippletest"
  <<: *terraform_apply
